
package org.lavlad.wslab.service;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "BookService", targetNamespace = "http://service.wslab.lavlad.org/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface BookService {


    /**
     * 
     * @param id
     * @throws BookNotFoundException
     */
    @WebMethod
    @RequestWrapper(localName = "deleteBookById", targetNamespace = "http://service.wslab.lavlad.org/", className = "org.lavlad.wslab.service.DeleteBookById")
    @ResponseWrapper(localName = "deleteBookByIdResponse", targetNamespace = "http://service.wslab.lavlad.org/", className = "org.lavlad.wslab.service.DeleteBookByIdResponse")
    public void deleteBookById(
        @WebParam(name = "id", targetNamespace = "")
        Long id)
        throws BookNotFoundException
    ;

    /**
     * 
     * @param updateTO
     * @throws BookUpdateException
     * @throws BookNotFoundException
     */
    @WebMethod
    @RequestWrapper(localName = "updateBook", targetNamespace = "http://service.wslab.lavlad.org/", className = "org.lavlad.wslab.service.UpdateBook")
    @ResponseWrapper(localName = "updateBookResponse", targetNamespace = "http://service.wslab.lavlad.org/", className = "org.lavlad.wslab.service.UpdateBookResponse")
    public void updateBook(
        @WebParam(name = "updateTO", targetNamespace = "")
        BookUpdateTO updateTO)
        throws BookNotFoundException, BookUpdateException
    ;

    /**
     * 
     * @param createTO
     * @return
     *     returns java.lang.Long
     * @throws BookCreateException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createBook", targetNamespace = "http://service.wslab.lavlad.org/", className = "org.lavlad.wslab.service.CreateBook")
    @ResponseWrapper(localName = "createBookResponse", targetNamespace = "http://service.wslab.lavlad.org/", className = "org.lavlad.wslab.service.CreateBookResponse")
    public Long createBook(
        @WebParam(name = "createTO", targetNamespace = "")
        BookCreateTO createTO)
        throws BookCreateException
    ;

    /**
     * 
     * @param searchTO
     * @return
     *     returns java.util.List<org.lavlad.wslab.service.Book>
     * @throws BookSearchException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getBooks", targetNamespace = "http://service.wslab.lavlad.org/", className = "org.lavlad.wslab.service.GetBooks")
    @ResponseWrapper(localName = "getBooksResponse", targetNamespace = "http://service.wslab.lavlad.org/", className = "org.lavlad.wslab.service.GetBooksResponse")
    public List<Book> getBooks(
        @WebParam(name = "searchTO", targetNamespace = "")
        BookSearchTO searchTO)
        throws BookSearchException
    ;

}
